generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleName {
  ISSUER
  BIDDER
}

enum BidderType {
  INDIAN
  FOREIGN
}

model Role {
  role_id    String   @id @default(uuid())
  role_name  RoleName @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  User User[]
}

model User {
  id                   String   @id @default(uuid())
  role_id              String
  name                 String
  email                String   @unique
  Correspondence_email String   @unique
  country_code         String
  phone_number         String
  password             String
  token                String?
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  role           Role             @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction)
  CompanyDetails CompanyDetails[]
  Otp            Otp[]
}

model Otp {
  id         String   @id @default(uuid())
  user_id    String   @unique
  otp_code   String?  @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model CompanyDetails {
  id                  String     @id @default(uuid())
  user_id             String
  company_name        String     @unique
  preferential_bidder Boolean    @default(false)
  preference_category String?
  registration_number String     @unique
  registred_address   String
  name_of_partners    String?
  bidder_type         BidderType
  city                String
  state               String
  postal_code         String
  pan_number          String     @unique
  establishment_year  String?
  nature_of_business  String
  legal_status        String
  company_category    String

  user                  User                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  CompanyContactDetails CompanyContactDetails[]
}

model CompanyContactDetails {
  id           String   @id @default(uuid())
  company_id   String
  contact_name String
  dob          DateTime
  designation  String?
  isd_code     String
  std_code     String?
  phone_number String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  company CompanyDetails @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
